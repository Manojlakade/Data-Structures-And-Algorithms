import java.util.*;
public class newyear{
    public static int sum(int a,int b)
    {
        return a+b;
    }
    public static int factorial(int a)
    {
        int sum=1;
        for(int i=1;i<=a;i++)
        {
            sum=sum*i;
        }
        return sum;

    }
    public static int binomialcoe(int n,int r)
    {
        int a=factorial(n);
        int b=factorial(r);
        int c=factorial(n-r);
        int bincoe=a/(b*c);
        return bincoe;
            
    }
    public static boolean isprime(int a)
    {
        boolean flag=true;
        for(int i=2;i<= Math.sqrt(a);i++){
            if (a%i==0){
                flag=false;
                break;
            }
        }
        return flag;
    }
    public static int bintodec(int n){
        int power=0;
        int dec=0;
        while(n>0){
            int ld=n%10;
            n=n/10;
            dec=dec+(ld*((int)Math.pow(2,power)));
            power++;
            
        }
        return dec;

    }
    public static int dectobin(int n){
        int pow=0;
        int bin=0;
        while(n>0){
            int rem=n%2;
            n=n/2;
            bin=bin+((int)(rem*(Math.pow(10,pow))));
            pow++;   
        }
        return bin;

    }
    public static void hollow_rectangle(int a,int b){
        for(int i=1;i<=a;i++)
        {
            for(int j=1;j<=b;j++){
                if(i==1||i==a||j==1||j==b){
                    System.out.print("*");
                }
                else{
                    System.out.print(" ");
                }
            }
            System.out.println();
        }
    }   
    public static void inv_rot_half_pyramid(int n){
        for(int i=1;i<=n;i++){
            for(int j=1;j<=(n-i);j++){
                System.out.print(" ");
            }
            for(int j=1;j<=i;j++){
                System.out.print("*");
            }
            System.out.println();   
            
        }
        
    } 
    public static void inv_half_pyramid(int n){
        
        for(int i=0;i<=n-1;i++){
            int num=0;
            for(int j=1;j<=n-i;j++){
                
                num++;
                System.out.print(num);

            }
            System.out.println();
        }
    }
    public static void floyds_traingle(int n){
        int num=1;
        for(int i=1;i<=n;i++){
            
            for(int j=1;j<=i;j++){
                
                
                System.out.print(num+"");
                num++;

            }
            System.out.println();

        }

    } 
    public static void zero_one_triangle(int n){
        for(int i=1;i<=n;i++){
            for(int j=1;j<=i;j++){
                if((i+j)%2==0){
                    System.out.print("1");
                }
                else{
                    System.out.print("0");
                }
                
            }
            System.out.println();
        }
    }
    public static void butterfly_pattern(int n){
        for(int i=1;i<=n;i++){
            for(int j=1;j<=i;j++){
                System.out.print("*");
            }
            
            for(int j=1;j<=(2*(n-i));j++){
                System.out.print(" ");
            }
            for(int j=1;j<=i;j++){
                System.out.print("*");
            }
            System.out.println();
        }
        for(int i=n;i>=1;i--){
            for(int j=1;j<=i;j++){
                System.out.print("*");
            }
            
            for(int j=1;j<=(2*(n-i));j++){
                System.out.print(" ");
            }
            for(int j=1;j<=i;j++){
                System.out.print("*");
            }
            System.out.println();

        }
        
    }
    public static void solid_rhombus(int n){
        for (int i=1;i<=n;i++){
            for(int j=1;j<=n-i;j++){
                System.out.print(" ");
            }
            for(int j=1;j<=n;j++){
                System.out.print("*");
            }
            System.out.println();
        }
    }
    public static void hollow_rhombus(int n){
        for(int i=1;i<=n;i++){
            for(int j=1;j<=n-i;j++){
                System.out.print(" ");
            }
            
            for(int j=1;j<=n;j++){
                if(i==1||i==n||j==1||j==n){
                    System.out.print("*");
                }
                else{
                    System.out.print(" ");
                }
            }
            System.out.println ();
        }
    }
        
    public static int countPrimes(int n) {
        if (n==0||n==1){
            return 0;
        }
        int sum=0;
        for(int i=2;i<=n-1;i++)
        {
            int flag=1;
            for (int j=2;j<=Math.sqrt(n);i++)
            {
                if(i%j==0){
                    flag=0;
                    break;
                }
            }
            if (flag==1){
                sum++;
            }
        }
        return sum;
    }
    public static void diamond(int n){
        for (int i=1;i<=n;i++){
            for (int j=1;j<=n-1;j++){
                System.out.print(" ");
            }
            for(int j=1;j<=(2*i+1);j++){
                System.out.print("*");
            }
        }
    }
        
    
}
    
    public static void main(String args[]){
        /*int counter=0;
        while(counter<=10){
            System.out.println("hello world");
            counter++;
        }
        int counter=1;
        while(counter<=10)
        {
            System.out.println(counter);
            counter++;
        }
        int counter=1;
        Scanner sc= new Scanner(System.in);
        int range=sc.nextInt();
        while(counter<=range){
            System.out.println(counter);
            counter++;
        }
        int counter=1;
        int sum=0;
        Scanner sc=new Scanner(System.in);
        int range =sc.nextInt();
        while(counter<=range)
        {
            sum=sum+counter;
            counter++;
        }
        System.out.println(sum);
        for(int i=0;i<=10;i++)
        {
            System.out.println(i);

        }
        for(int i=0;i<=3;i++)
        {
            System.out.println("****");
        }
        int num=10987;
        while(num>0)
        {
            int result=num%10;
            num=num/10;
            System.out.print(result);

        }
        int num=10987;
        int reverse=0;
        while(num>0)
        {
            int n=num%10;
            reverse=reverse *10 +n;
            num=num/10;
        }
        System.out.println(reverse);
        do{
            System.out.println("hello world");
            counter++;
        }while(counter<=5);
        
       
        
        int counter=0;
        while(counter<10)
        {
            Scanner sc=new Scanner(System.in);
            int a=sc.nextInt();
            if(a==5)
            {
                continue;
            }
            if(a==7)
            {
                break;
            }
            System.out.println(a);
            counter++;
        }

        Scanner sc=new Scanner(System.in);
        int a=sc.nextInt();
        int flag=0;
        for(int i=2;i<a-1;i++)
        {
            if (a%i==0)
            {
                flag=1;
                break;
            }
            
        }
        if(flag==0){
            System.out.println("Prime Number");
        }
        else{
            System.out.println("Composite Number");
        }
        Scanner sc=new Scanner(System.in);
        int a=sc.nextInt();
        for(int i=1;i<=a;i++)
        {
            for(int j=1;j<=i;j++)
            {
                System.out.print("*");
            }
            System.out.println();
        }
        for(int i=0;i<a;i++)
        {
            for(int j=1;j<=a-i;j++)
            {
                System.out.print("*");
            }
            System.out.println();
        }
        for(int i=1;i<=a;i++)
        {
            int holder=1;
            for(int j=1;j<=i;j++)
            {
                System.out.print(holder);
                holder++;
            }
            System.out.println();
        }
        for(int i=1;i<=a;i++)
        {
            int holder=1;
            for(int j=1;j<=i;j++)
            {
                System.out.print(holder);
                holder++;
            }
            System.out.println();
        }
        for(int i=1;i<=a;i++)
        {
            int holder=1;
            for(int j=1;j<=i;j++)
            {
                System.out.print(holder);
                holder++;
            }
            System.out.println();
        }
        char holder='A';
        for(int i=1;i<=a;i++)
        {
            
            for(int j=1;j<=i;j++)
            {
                System.out.print(holder);
                holder++;
            }
            System.out.println();
        }
        
        int sum=sum(5,4);
        System.out.println(sum);
        
        Scanner sc=new Scanner(System.in);
        int a=sc.nextInt();
        int flag=0;
        for(int i=2;i<Math.sqrt;i++)
        {
            if (a%i==0)
            {
                flag=1;
                break;
            }
            
        }
        if(flag==0){
            System.out.println("Prime Number");
        }
        else{
            System.out.println("Composite Number");
        }
        
        Scanner sc=new Scanner(System.in);
        int a=sc.nextInt();
        int fac=factorial(a);
        System.out.println(fac);
        

        Scanner sc=new Scanner(System.in);
        int a=sc.nextInt();
        int b=sc.nextInt();
        System.out.println(binomialcoe(a,b));
        
        Scanner sc=new Scanner(System.in);
        int a=sc.nextInt();
        System.out.println(isprime(a));
        
        System.out.println(bintodec(101));
        
        System.out.println(bintodec(7));
        
        
        hollow_rectangle(5,4); 
        
        inv_rot_half_pyramid(4);
        
        inv_half_pyramid(5);
        
        floyds_traingle(5);
        
       zero_one_triangle(5);
       
        
       butterfly_pattern(4);
        
       solid_rhombus(5);
       hollow_rhombus(5);
       
       System.out.println(countPrimes(0));
      
       diamond(4);*/
       butterfly_pattern(4);
    }
}
